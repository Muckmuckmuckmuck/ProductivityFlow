{"$message_type":"diagnostic","message":"unused import: `cocoa::appkit::NSRunningApplication`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/system_monitor.rs","byte_start":3293,"byte_end":3328,"line_start":96,"line_end":96,"column_start":9,"column_end":44,"is_primary":true,"text":[{"text":"    use cocoa::appkit::NSRunningApplication;","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/system_monitor.rs","byte_start":3289,"byte_end":3329,"line_start":96,"line_end":96,"column_start":5,"column_end":45,"is_primary":true,"text":[{"text":"    use cocoa::appkit::NSRunningApplication;","highlight_start":5,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `cocoa::appkit::NSRunningApplication`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/system_monitor.rs:96:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use cocoa::appkit::NSRunningApplication;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `CGEventSourceStateID` and `CGEventSource`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/system_monitor.rs","byte_start":3458,"byte_end":3471,"line_start":99,"line_end":99,"column_start":39,"column_end":52,"is_primary":true,"text":[{"text":"    use core_graphics::event_source::{CGEventSource, CGEventSourceStateID};","highlight_start":39,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/system_monitor.rs","byte_start":3473,"byte_end":3493,"line_start":99,"line_end":99,"column_start":54,"column_end":74,"is_primary":true,"text":[{"text":"    use core_graphics::event_source::{CGEventSource, CGEventSourceStateID};","highlight_start":54,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/system_monitor.rs","byte_start":3424,"byte_end":3495,"line_start":99,"line_end":99,"column_start":5,"column_end":76,"is_primary":true,"text":[{"text":"    use core_graphics::event_source::{CGEventSource, CGEventSourceStateID};","highlight_start":5,"highlight_end":76}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `CGEventSourceStateID` and `CGEventSource`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/system_monitor.rs:99:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use core_graphics::event_source::{CGEventSource, CGEventSourceStateID};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `cargo-clippy`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":499,"byte_end":523,"line_start":22,"line_end":22,"column_start":28,"column_end":52,"is_primary":true,"text":[{"text":"                #[cfg_attr(feature = \"cargo-clippy\", allow(replace_consts))]","highlight_start":28,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/system_monitor.rs","byte_start":3802,"byte_end":3827,"line_start":107,"line_end":107,"column_start":35,"column_end":60,"is_primary":false,"text":[{"text":"            let workspace_class = objc::class!(NSWorkspace);","highlight_start":35,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"objc::class!","def_site_span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":273,"byte_end":291,"line_start":16,"line_end":16,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! class {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `custom-protocol` and `default`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `objc::class` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `objc::class` may come from an old version of the `objc` crate, try updating your dependency with `cargo update -p objc`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `cargo-clippy`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/system_monitor.rs:107:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let workspace_class = objc::class!(NSWorkspace);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `custom-protocol` and `default`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `objc::class` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the macro `objc::class` may come from an old version of the `objc` crate, try updating your dependency with `cargo update -p objc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `objc::class` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `cargo-clippy`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":1789,"byte_end":1813,"line_start":52,"line_end":52,"column_start":28,"column_end":52,"is_primary":true,"text":[{"text":"                #[cfg_attr(feature = \"cargo-clippy\", allow(replace_consts))]","highlight_start":28,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":2828,"byte_end":2871,"line_start":84,"line_end":84,"column_start":24,"column_end":67,"is_primary":false,"text":[{"text":"    ($name:ident) => ({sel_impl!(concat!(stringify!($name), '\\0'))});","highlight_start":24,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":4239,"byte_end":4250,"line_start":131,"line_end":131,"column_start":19,"column_end":30,"is_primary":false,"text":[{"text":"        let sel = sel!($name);","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/system_monitor.rs","byte_start":3861,"byte_end":3904,"line_start":108,"line_end":108,"column_start":33,"column_end":76,"is_primary":false,"text":[{"text":"            let workspace: id = msg_send![workspace_class, sharedWorkspace];","highlight_start":33,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"msg_send!","def_site_span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":3550,"byte_end":3571,"line_start":111,"line_end":111,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! msg_send {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sel!","def_site_span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":2786,"byte_end":2802,"line_start":83,"line_end":83,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! sel {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sel_impl!","def_site_span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":1453,"byte_end":1474,"line_start":44,"line_end":44,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! sel_impl {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `custom-protocol` and `default`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `sel_impl` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `sel_impl` may come from an old version of the `objc` crate, try updating your dependency with `cargo update -p objc`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `cargo-clippy`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/system_monitor.rs:108:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let workspace: id = msg_send![workspace_class, sharedWorkspace];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `custom-protocol` and `default`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `sel_impl` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the macro `sel_impl` may come from an old version of the `objc` crate, try updating your dependency with `cargo update -p objc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `sel_impl` which comes from the expansion of the macro `msg_send` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `cargo-clippy`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":1789,"byte_end":1813,"line_start":52,"line_end":52,"column_start":28,"column_end":52,"is_primary":true,"text":[{"text":"                #[cfg_attr(feature = \"cargo-clippy\", allow(replace_consts))]","highlight_start":28,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":2828,"byte_end":2871,"line_start":84,"line_end":84,"column_start":24,"column_end":67,"is_primary":false,"text":[{"text":"    ($name:ident) => ({sel_impl!(concat!(stringify!($name), '\\0'))});","highlight_start":24,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":4239,"byte_end":4250,"line_start":131,"line_end":131,"column_start":19,"column_end":30,"is_primary":false,"text":[{"text":"        let sel = sel!($name);","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/system_monitor.rs","byte_start":3942,"byte_end":3984,"line_start":109,"line_end":109,"column_start":37,"column_end":79,"is_primary":false,"text":[{"text":"            let frontmost_app: id = msg_send![workspace, frontmostApplication];","highlight_start":37,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"msg_send!","def_site_span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":3550,"byte_end":3571,"line_start":111,"line_end":111,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! msg_send {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sel!","def_site_span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":2786,"byte_end":2802,"line_start":83,"line_end":83,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! sel {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sel_impl!","def_site_span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":1453,"byte_end":1474,"line_start":44,"line_end":44,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! sel_impl {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `custom-protocol` and `default`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `sel_impl` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `sel_impl` may come from an old version of the `objc` crate, try updating your dependency with `cargo update -p objc`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `cargo-clippy`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/system_monitor.rs:109:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let frontmost_app: id = msg_send![workspace, frontmostApplication];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `custom-protocol` and `default`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `sel_impl` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the macro `sel_impl` may come from an old version of the `objc` crate, try updating your dependency with `cargo update -p objc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `sel_impl` which comes from the expansion of the macro `msg_send` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `cargo-clippy`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":1789,"byte_end":1813,"line_start":52,"line_end":52,"column_start":28,"column_end":52,"is_primary":true,"text":[{"text":"                #[cfg_attr(feature = \"cargo-clippy\", allow(replace_consts))]","highlight_start":28,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":2828,"byte_end":2871,"line_start":84,"line_end":84,"column_start":24,"column_end":67,"is_primary":false,"text":[{"text":"    ($name:ident) => ({sel_impl!(concat!(stringify!($name), '\\0'))});","highlight_start":24,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":4239,"byte_end":4250,"line_start":131,"line_end":131,"column_start":19,"column_end":30,"is_primary":false,"text":[{"text":"        let sel = sel!($name);","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/system_monitor.rs","byte_start":4192,"byte_end":4231,"line_start":116,"line_end":116,"column_start":32,"column_end":71,"is_primary":false,"text":[{"text":"            let app_name: id = msg_send![frontmost_app, localizedName];","highlight_start":32,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"msg_send!","def_site_span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":3550,"byte_end":3571,"line_start":111,"line_end":111,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! msg_send {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sel!","def_site_span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":2786,"byte_end":2802,"line_start":83,"line_end":83,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! sel {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sel_impl!","def_site_span":{"file_name":"/Users/jayreddy/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/objc-0.2.7/src/macros.rs","byte_start":1453,"byte_end":1474,"line_start":44,"line_end":44,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! sel_impl {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `feature` are: `custom-protocol` and `default`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `sel_impl` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `sel_impl` may come from an old version of the `objc` crate, try updating your dependency with `cargo update -p objc`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `cargo-clippy`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/system_monitor.rs:116:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let app_name: id = msg_send![frontmost_app, localizedName];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `custom-protocol` and `default`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `sel_impl` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the macro `sel_impl` may come from an old version of the `objc` crate, try updating your dependency with `cargo update -p objc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `sel_impl` which comes from the expansion of the macro `msg_send` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `tracking`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":5716,"byte_end":5724,"line_start":199,"line_end":199,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"fn monitoring_loop(tracking: Arc<Mutex<TrackingState>>, should_stop: Arc<AtomicBool>) {","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":5716,"byte_end":5724,"line_start":199,"line_end":199,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"fn monitoring_loop(tracking: Arc<Mutex<TrackingState>>, should_stop: Arc<AtomicBool>) {","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":"_tracking","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `tracking`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:199:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn monitoring_loop(tracking: Arc<Mutex<TrackingState>>, should_stop: Arc<AtomicBool>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_tracking`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"7 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 7 warnings emitted\u001b[0m\n\n"}
